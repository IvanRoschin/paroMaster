"use client"

import { useEffect, useMemo } from "react"

import { Button, CartItem } from "@/components/index"
import { storageKeys } from "@/helpers/index"
import { ICartItem } from "@/types/cart/ICartItem"

export const CartClient = ({
  onConfirm,
  onCancel
}: {
  onConfirm: () => void
  onCancel: () => void
  title?: string
}) => {
  const { cart } = useShoppingCart()

  const totalPrice = useMemo(() => {
    return cart.reduce((acc: number, item: ICartItem) => {
      return acc + (item.good.price || 0) * (item.quantity || 1)
    }, 0)
  }, [cart])

  useEffect(() => {
    sessionStorage.setItem(storageKeys.totalPrice, JSON.stringify(totalPrice))
  }, [totalPrice])

  return (
    <div className="bg-white rounded-2xl shadow-md p-6 space-y-6">
      <h2 className="text-xl font-semibold text-gray-800 border-b pb-4">üõçÔ∏è –¢–æ–≤–∞—Ä–∏ —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ</h2>

      <div className="space-y-4">
        {cart.map((item: ICartItem, i: number) => (
          <CartItem key={i} quantity={item.quantity} good={item.good} />
        ))}
      </div>

      <div className="border-t pt-6 space-y-2 text-right text-gray-700">
        <p className="text-lg">
          –í—Å—å–æ–≥–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º: <span className="font-bold text-gray-900">{totalPrice} –≥—Ä–Ω</span>
        </p>
        <p className="text-sm italic">
          {totalPrice >= 1000
            ? "üöö –î–æ—Å—Ç–∞–≤–∫–∞ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞"
            : "üöö –í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: –∑–∞ —Ç–∞—Ä–∏—Ñ–∞–º–∏ –ø–µ—Ä–µ–≤—ñ–∑–Ω–∏–∫–∞"}
        </p>
      </div>

      <div className="grid grid-cols-2 gap-4 pt-4">
        <Button type="button" label="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏" onClick={onCancel} small outline />
        <Button type="button" label="–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" onClick={onConfirm} small />
      </div>
    </div>
  )
}

export default CartClient
function useShoppingCart(): { cart: any } {
  throw new Error("Function not implemented.")
}
