name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  DATABASE_URL: ${{ secrets.MONGODB_URI }}
  SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  NOVA_API: ${{ secrets.NOVA_API }}
  WAYFORPAY_MERCHANT_ACCOUNT: ${{ secrets.WAYFORPAY_MERCHANT_ACCOUNT }}
  WAYFORPAY_SECRET_KEY: ${{ secrets.WAYFORPAY_SECRET_KEY }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
        uses: actions/checkout@v3

      - name: ‚éî –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: üì• –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        run: npm install

      - name: üíÑ Prettier format
        run: npm run format

      - name: üî¨ –õ—ñ–Ω—Ç–∏–Ω–≥
        run: npm run lint

      - name: üíÖ Prettier check
        run: npm run check

      - name: üèó –ó–±—ñ—Ä–∫–∞ Next.js
        run: npm run build

      # ----------------- Docker -----------------
      - name: üê≥ Docker Login
        if: ${{ env.DOCKER_USER != '' && secrets.DOCKERHUB_PASSWORD != '' }}
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ env.DOCKER_USER }} --password-stdin

      - name: üì¶ Docker Build & Push
        if: ${{ env.DOCKER_USER != '' && secrets.DOCKERHUB_PASSWORD != '' }}
        run: |
          IMAGE_NAME=${{ env.DOCKER_USER }}/paro-master
          docker rm -f paro-master || true
          docker rmi -f $IMAGE_NAME:latest || true
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: üê≥ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        if: ${{ env.DOCKER_USER != '' }}
        run: |
          IMAGE_NAME=${{ env.DOCKER_USER:-ivaros }}/paro-master
          CONTAINER_NAME=paro-master
          docker rm -f $CONTAINER_NAME || true
          docker run -d --rm --name $CONTAINER_NAME \
            -p 3030:3000 \
            -e NODE_ENV=production \
            $IMAGE_NAME:latest \
            sh -c "next start -H 0.0.0.0 -p 3000"

      # ----------------- Health Check -----------------
      - name: ü©∫ Post-deploy Health Check
        id: healthcheck
        run: |
          echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
          if curl -sf http://localhost:3030; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ"
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
            exit 1

      # ----------------- Notifications -----------------
      - name: ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SMTP_EMAIL }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "CI/CD: ${{ steps.healthcheck.outputs.status }} –¥–ª—è paroMaster"
          body: |
            –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞: ${{ steps.healthcheck.outputs.status }}
            –ö–æ–º–º–∏—Ç: ${{ github.sha }}
            –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
          to: ivan.roschin@86gmail.com
          from: "CI/CD Bot <${{ secrets.SMTP_EMAIL }}>"

      - name: üì≤ Send Telegram notification
        if: always() && ${{ secrets.TELEGRAM_CHAT_ID != '' && secrets.TELEGRAM_BOT_TOKEN != '' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ CI/CD –∑–∞–≤–µ—Ä—à–µ–Ω!
            üì¶ –û–±—Ä–∞–∑: ${{ github.sha }}
            ü©∫ –°—Ç–∞—Ç—É—Å HealthCheck: ${{ steps.healthcheck.outputs.status }}
            üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
