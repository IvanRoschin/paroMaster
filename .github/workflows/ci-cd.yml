name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  DATABASE_URL: ${{ secrets.MONGODB_URI }}
  SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  NOVA_API: ${{ secrets.NOVA_API }}
  WAYFORPAY_MERCHANT_ACCOUNT: ${{ secrets.WAYFORPAY_MERCHANT_ACCOUNT }}
  WAYFORPAY_SECRET_KEY: ${{ secrets.WAYFORPAY_SECRET_KEY }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - uses: actions/setup-node@v3
        name: Setup Node.js
        with:
          node-version: 18
          cache: npm

      - run: npm install
        name: Install dependencies

      - run: npm run format
        name: Prettier format

      - run: npm run lint
        name: Linting

      - run: npm run check
        name: Prettier check

      - run: npm run build
        name: Build Next.js

      - name: Docker Login
        run: |
          if [ -n "${DOCKER_USER}" ] && [ -n "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u $DOCKER_USER --password-stdin
          fi

      - name: Docker Build & Push
        run: |
          if [ -n "${DOCKER_USER}" ] && [ -n "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
            IMAGE_NAME=${DOCKER_USER}/paro-master
            docker rm -f paro-master || true
            docker rmi -f $IMAGE_NAME:latest || true
            docker build -t $IMAGE_NAME:latest .
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:${GITHUB_SHA}
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:${GITHUB_SHA}
          fi

      - name: Run Docker Container
        run: |
          IMAGE_NAME=${DOCKER_USER:-ivaros}/paro-master
          CONTAINER_NAME=paro-master
          docker rm -f $CONTAINER_NAME || true
          docker run -d --rm --name $CONTAINER_NAME \
            -p 3030:3000 \
            -e NODE_ENV=production \
            $IMAGE_NAME:latest \
            sh -c "next start -H 0.0.0.0 -p 3000"

      - id: healthcheck
        run: |
          echo "Checking application..."
          if curl -sf http://localhost:3030; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1

      - name: Send Telegram Notification
        if: ${{ always() && secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ CI/CD –∑–∞–≤–µ—Ä—à–µ–Ω!
            üì¶ –û–±—Ä–∞–∑: ${{ github.sha }}
            ü©∫ –°—Ç–∞—Ç—É—Å HealthCheck: ${{ steps.healthcheck.outputs.status }}
            üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
