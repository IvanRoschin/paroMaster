name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: ‚¨áÔ∏è Checkout repository

      - uses: actions/setup-node@v3
        name: ‚éî Setup Node.js
        with:
          node-version: 22
          cache: 'npm'

      - run: npm install
        name: üì• Install dependencies

      - run: npm run format
        name: üíÖ Prettier format

      - run: npm run lint
      - name: üî¨ Linting

      - run: npm run check
        name: Prettier check

      - run: npm run build
        name: üèó Build Next.js

      - name: üê≥ Docker Login
        if: env.DOCKER_USER
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

      - name: üì¶ Docker Build & Push
        if: env.DOCKER_USER
        run: |
          IMAGE_NAME=${{ env.DOCKER_USER }}/paro-master

          echo "üßπ –ó—É–ø–∏–Ω–∫–∞ —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—è–∫—â–æ —î)"
          docker rm -f paro-master || true

          echo "üßº –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑—É (—è–∫—â–æ —î)"
          docker rmi -f $IMAGE_NAME:latest || true

          echo "üî® –ó–±—ñ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑—É"
          docker build -t $IMAGE_NAME:latest .

          echo "üè∑Ô∏è –¢–µ–≥—É–≤–∞–Ω–Ω—è –∫–æ–º—ñ—Ç–æ–º"
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.sha }}

          echo "üöÄ –ü—É—à —É DockerHub"
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: üê≥ Run Docker Container
        run: |
          IMAGE_NAME=${{ env.DOCKER_USER }}/paro-master
          echo "üåÄ –°—Ç–∞—Ä—Ç –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
          docker run -d --name paro-master \
            -p 3030:3000 \
            -e NODE_ENV=production \
            $IMAGE_NAME:latest \
            sh -c "next start -H 0.0.0.0 -p 3000"

          echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
          sleep 10

      - name: üì° Healthcheck
        run: |
          echo "Checking application..."
          if curl -sf http://localhost:3030; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1

          echo "üì¶ –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
          docker logs paro-master

      - name: Send Telegram Notification
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_CHAT_ID }}
          token: ${{ env.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ CI/CD –∑–∞–≤–µ—Ä—à–µ–Ω!
            üì¶ –û–±—Ä–∞–∑: ${{ github.sha }}
            ü©∫ –°—Ç–∞—Ç—É—Å HealthCheck: ${{ steps.healthcheck.outputs.status }}
            üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
