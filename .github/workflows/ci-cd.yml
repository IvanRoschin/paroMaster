name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  NODE_ENV: production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ----------------- Checkout -----------------
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      # ----------------- Node.js -----------------
      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: 📥 Install dependencies
        run: npm install

      - name: 💄 Prettier format
        run: npm run format

      - name: 🔬 Linting
        run: npm run lint

      - name: 💅 Prettier check
        run: npm run check

      - name: 🏗 Build Next.js
        run: npm run build

      # ----------------- Docker -----------------
      - name: 🐳 Docker Login
        if: ${{ env.DOCKER_USER && env.DOCKER_PASSWORD }}
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

      - name: 📦 Docker Build & Push
        if: ${{ env.DOCKER_USER && env.DOCKER_PASSWORD }}
        run: |
          IMAGE_NAME=${DOCKER_USER}/paro-master
          docker rm -f paro-master || true
          docker rmi -f $IMAGE_NAME:latest || true
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${GITHUB_SHA}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${GITHUB_SHA}

      - name: 🐳 Run Docker Container
        if: ${{ env.DOCKER_USER }}
        run: |
          IMAGE_NAME=${DOCKER_USER}/paro-master
          CONTAINER_NAME=paro-master
          docker rm -f $CONTAINER_NAME || true
          docker run -d --rm --name $CONTAINER_NAME \
            -p 3030:3000 \
            -e NODE_ENV=production \
            $IMAGE_NAME:latest \
            sh -c "next start -H 0.0.0.0 -p 3000"

      # ----------------- Health Check -----------------
      - id: healthcheck
        run: |
          echo "⏳ Checking application..."
          if curl -sf http://localhost:3030; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "✅ Application is up"
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "❌ Application is down"
            exit 1

      # ----------------- Telegram Notification -----------------
      - name: 📲 Send Telegram notification
        if: ${{ always() && secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ CI/CD finished
            📦 Image: ${{ github.sha }}
            🩺 HealthCheck: ${{ steps.healthcheck.outputs.status }}
            🔗 Repo: ${{ github.repository }}
